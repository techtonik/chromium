# Copyright 2015 The Chromium Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

import("//build/config/features.gni")
import("//build/config/nacl/config.gni")

if (is_nacl) {
  group("ppapi_lib") {
    deps = [
      "//ppapi/native_client/src/untrusted/irt_stub:ppapi_stub_lib",
    ]
    if (!is_nacl_glibc) {
      # Glibc has its version of pthread library.
      deps += [ "//native_client/src/untrusted/pthread" ]
    }
  }

  executable("nacl_irt") {
    deps = [
      "//base",
      "//components/tracing",
      "//gpu/command_buffer/client",
      "//gpu/command_buffer/common",
      "//gpu/command_buffer/client:gles2_implementation",
      "//gpu/ipc",
      "//ipc",
      "//media:shared_memory_support",
      "//native_client/src/untrusted/irt:irt_core_lib",
      "//native_client/src/shared/srpc",
      "//native_client/src/shared/platform",
      "//native_client/src/tools/tls_edit($host_toolchain)",
      "//native_client/src/untrusted/nacl:imc_syscalls",
      "//native_client/src/shared/gio",
      "//ppapi/native_client/src/untrusted/pnacl_irt_shim:irt",
      "//ppapi/proxy",
      "//ppapi/proxy:ipc",
      "//ppapi/shared_impl",
    ]
  }

  copy("nacl_irt_copy") {
    # TODO(phosek): We can remove this ugliness if we change the
    # IRT file name in components/nacl/browser/nacl_browser.cc
    if (target_cpu == "x86") {
      suffix = "x86_32"
    } else if (target_cpu == "x64") {
      suffix = "x86_64"
    } else if (target_cpu == "arm") {
      suffix = "arm"
    }

    sources = [
      "${root_out_dir}/nacl_irt.nexe",
    ]
    outputs = [
      "${root_build_dir}/{{source_name_part}}_${suffix}.nexe",
    ]
    deps = [
      ":nacl_irt",
    ]
  }
}

group("irt") {
  data_deps = [ ":nacl_irt_copy(//build/toolchain/nacl:irt_${target_cpu})" ]
}
